//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_Gateway", "Gateway", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.Gateway), "GatewayStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.GatewayStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_Hubs_Gateways", "Gateway", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.Gateway), "Hub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.Hub), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Gateway", "Gateway", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tetsuo.Entities.Model.Gateway), "Instrumentation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.Instrumentation), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.StatusHistory), "GatewayStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.GatewayStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_Hub", "Hub", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.Hub), "HubStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Hub", "Hub", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tetsuo.Entities.Model.Hub), "Instrumentation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.Instrumentation), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_Spokes_Hubs", "Hub", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.Hub), "HubService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubService), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubService_MetaService", "MetaService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.MetaService), "HubService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubService), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_HubService", "HubService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.HubService), "HubServiceStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubServiceStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.StatusHistory), "HubServiceStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubServiceStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_StatusHistory", "StatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.StatusHistory), "HubStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.HubStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_MetaService", "MetaService", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.MetaService), "MetaServiceStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.MetaServiceStatusHistoryRef), true)]
[assembly: EdmRelationshipAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tetsuo.Entities.Model.StatusHistory), "MetaServiceStatusHistoryRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tetsuo.Entities.Model.MetaServiceStatusHistoryRef), true)]

#endregion

namespace Tetsuo.Entities.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class tetsuoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new tetsuoEntities object using the connection string found in the 'tetsuoEntities' section of the application configuration file.
        /// </summary>
        public tetsuoEntities() : base("name=tetsuoEntities", "tetsuoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new tetsuoEntities object.
        /// </summary>
        public tetsuoEntities(string connectionString) : base(connectionString, "tetsuoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new tetsuoEntities object.
        /// </summary>
        public tetsuoEntities(EntityConnection connection) : base(connection, "tetsuoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gateway> Gateways
        {
            get
            {
                if ((_Gateways == null))
                {
                    _Gateways = base.CreateObjectSet<Gateway>("Gateways");
                }
                return _Gateways;
            }
        }
        private ObjectSet<Gateway> _Gateways;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GatewayStatusHistoryRef> GatewayStatusHistoryRefs
        {
            get
            {
                if ((_GatewayStatusHistoryRefs == null))
                {
                    _GatewayStatusHistoryRefs = base.CreateObjectSet<GatewayStatusHistoryRef>("GatewayStatusHistoryRefs");
                }
                return _GatewayStatusHistoryRefs;
            }
        }
        private ObjectSet<GatewayStatusHistoryRef> _GatewayStatusHistoryRefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hub> Hubs
        {
            get
            {
                if ((_Hubs == null))
                {
                    _Hubs = base.CreateObjectSet<Hub>("Hubs");
                }
                return _Hubs;
            }
        }
        private ObjectSet<Hub> _Hubs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HubService> HubServices
        {
            get
            {
                if ((_HubServices == null))
                {
                    _HubServices = base.CreateObjectSet<HubService>("HubServices");
                }
                return _HubServices;
            }
        }
        private ObjectSet<HubService> _HubServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HubServiceStatusHistoryRef> HubServiceStatusHistoryRefs
        {
            get
            {
                if ((_HubServiceStatusHistoryRefs == null))
                {
                    _HubServiceStatusHistoryRefs = base.CreateObjectSet<HubServiceStatusHistoryRef>("HubServiceStatusHistoryRefs");
                }
                return _HubServiceStatusHistoryRefs;
            }
        }
        private ObjectSet<HubServiceStatusHistoryRef> _HubServiceStatusHistoryRefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HubStatusHistoryRef> HubStatusHistoryRefs
        {
            get
            {
                if ((_HubStatusHistoryRefs == null))
                {
                    _HubStatusHistoryRefs = base.CreateObjectSet<HubStatusHistoryRef>("HubStatusHistoryRefs");
                }
                return _HubStatusHistoryRefs;
            }
        }
        private ObjectSet<HubStatusHistoryRef> _HubStatusHistoryRefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Instrumentation> Instrumentations
        {
            get
            {
                if ((_Instrumentations == null))
                {
                    _Instrumentations = base.CreateObjectSet<Instrumentation>("Instrumentations");
                }
                return _Instrumentations;
            }
        }
        private ObjectSet<Instrumentation> _Instrumentations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaService> MetaServices
        {
            get
            {
                if ((_MetaServices == null))
                {
                    _MetaServices = base.CreateObjectSet<MetaService>("MetaServices");
                }
                return _MetaServices;
            }
        }
        private ObjectSet<MetaService> _MetaServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaServiceStatusHistoryRef> MetaServiceStatusHistoryRefs
        {
            get
            {
                if ((_MetaServiceStatusHistoryRefs == null))
                {
                    _MetaServiceStatusHistoryRefs = base.CreateObjectSet<MetaServiceStatusHistoryRef>("MetaServiceStatusHistoryRefs");
                }
                return _MetaServiceStatusHistoryRefs;
            }
        }
        private ObjectSet<MetaServiceStatusHistoryRef> _MetaServiceStatusHistoryRefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatusHistory> StatusHistories
        {
            get
            {
                if ((_StatusHistories == null))
                {
                    _StatusHistories = base.CreateObjectSet<StatusHistory>("StatusHistories");
                }
                return _StatusHistories;
            }
        }
        private ObjectSet<StatusHistory> _StatusHistories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gateways EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGateways(Gateway gateway)
        {
            base.AddObject("Gateways", gateway);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GatewayStatusHistoryRefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGatewayStatusHistoryRefs(GatewayStatusHistoryRef gatewayStatusHistoryRef)
        {
            base.AddObject("GatewayStatusHistoryRefs", gatewayStatusHistoryRef);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hubs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHubs(Hub hub)
        {
            base.AddObject("Hubs", hub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HubServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHubServices(HubService hubService)
        {
            base.AddObject("HubServices", hubService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HubServiceStatusHistoryRefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHubServiceStatusHistoryRefs(HubServiceStatusHistoryRef hubServiceStatusHistoryRef)
        {
            base.AddObject("HubServiceStatusHistoryRefs", hubServiceStatusHistoryRef);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HubStatusHistoryRefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHubStatusHistoryRefs(HubStatusHistoryRef hubStatusHistoryRef)
        {
            base.AddObject("HubStatusHistoryRefs", hubStatusHistoryRef);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Instrumentations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstrumentations(Instrumentation instrumentation)
        {
            base.AddObject("Instrumentations", instrumentation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaServices(MetaService metaService)
        {
            base.AddObject("MetaServices", metaService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaServiceStatusHistoryRefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaServiceStatusHistoryRefs(MetaServiceStatusHistoryRef metaServiceStatusHistoryRef)
        {
            base.AddObject("MetaServiceStatusHistoryRefs", metaServiceStatusHistoryRef);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatusHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatusHistories(StatusHistory statusHistory)
        {
            base.AddObject("StatusHistories", statusHistory);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="Gateway")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gateway : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gateway object.
        /// </summary>
        /// <param name="gatewayId">Initial value of the GatewayId property.</param>
        /// <param name="lastStatusHistoryID">Initial value of the LastStatusHistoryID property.</param>
        public static Gateway CreateGateway(global::System.Int32 gatewayId, global::System.Int32 lastStatusHistoryID)
        {
            Gateway gateway = new Gateway();
            gateway.GatewayId = gatewayId;
            gateway.LastStatusHistoryID = lastStatusHistoryID;
            return gateway;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GatewayId
        {
            get
            {
                return _GatewayId;
            }
            set
            {
                if (_GatewayId != value)
                {
                    OnGatewayIdChanging(value);
                    ReportPropertyChanging("GatewayId");
                    _GatewayId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GatewayId");
                    OnGatewayIdChanged();
                }
            }
        }
        private global::System.Int32 _GatewayId;
        partial void OnGatewayIdChanging(global::System.Int32 value);
        partial void OnGatewayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GatewayName
        {
            get
            {
                return _GatewayName;
            }
            set
            {
                OnGatewayNameChanging(value);
                ReportPropertyChanging("GatewayName");
                _GatewayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GatewayName");
                OnGatewayNameChanged();
            }
        }
        private global::System.String _GatewayName;
        partial void OnGatewayNameChanging(global::System.String value);
        partial void OnGatewayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GatewayBaseUri
        {
            get
            {
                return _GatewayBaseUri;
            }
            set
            {
                OnGatewayBaseUriChanging(value);
                ReportPropertyChanging("GatewayBaseUri");
                _GatewayBaseUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GatewayBaseUri");
                OnGatewayBaseUriChanged();
            }
        }
        private global::System.String _GatewayBaseUri;
        partial void OnGatewayBaseUriChanging(global::System.String value);
        partial void OnGatewayBaseUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GatewayDefaultBinding
        {
            get
            {
                return _GatewayDefaultBinding;
            }
            set
            {
                OnGatewayDefaultBindingChanging(value);
                ReportPropertyChanging("GatewayDefaultBinding");
                _GatewayDefaultBinding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GatewayDefaultBinding");
                OnGatewayDefaultBindingChanged();
            }
        }
        private global::System.String _GatewayDefaultBinding;
        partial void OnGatewayDefaultBindingChanging(global::System.String value);
        partial void OnGatewayDefaultBindingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> GatewayIsActive
        {
            get
            {
                return _GatewayIsActive;
            }
            set
            {
                OnGatewayIsActiveChanging(value);
                ReportPropertyChanging("GatewayIsActive");
                _GatewayIsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GatewayIsActive");
                OnGatewayIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _GatewayIsActive;
        partial void OnGatewayIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnGatewayIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastStatusHistoryID
        {
            get
            {
                return _LastStatusHistoryID;
            }
            set
            {
                OnLastStatusHistoryIDChanging(value);
                ReportPropertyChanging("LastStatusHistoryID");
                _LastStatusHistoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStatusHistoryID");
                OnLastStatusHistoryIDChanged();
            }
        }
        private global::System.Int32 _LastStatusHistoryID;
        partial void OnLastStatusHistoryIDChanging(global::System.Int32 value);
        partial void OnLastStatusHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GatewayReplyUri
        {
            get
            {
                return _GatewayReplyUri;
            }
            set
            {
                OnGatewayReplyUriChanging(value);
                ReportPropertyChanging("GatewayReplyUri");
                _GatewayReplyUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GatewayReplyUri");
                OnGatewayReplyUriChanged();
            }
        }
        private global::System.String _GatewayReplyUri;
        partial void OnGatewayReplyUriChanging(global::System.String value);
        partial void OnGatewayReplyUriChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_Gateway", "GatewayStatusHistoryRef")]
        public EntityCollection<GatewayStatusHistoryRef> GatewayStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GatewayStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "GatewayStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GatewayStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "GatewayStatusHistoryRef", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Hubs_Gateways", "Hub")]
        public EntityCollection<Hub> Hubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hub>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Hub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hub>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Hub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Gateway", "Instrumentation")]
        public EntityCollection<Instrumentation> Instrumentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Instrumentation>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Instrumentation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Instrumentation>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Instrumentation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="GatewayStatusHistoryRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GatewayStatusHistoryRef : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GatewayStatusHistoryRef object.
        /// </summary>
        /// <param name="gatewayStatusHistoryRefId">Initial value of the GatewayStatusHistoryRefId property.</param>
        /// <param name="gatewayId">Initial value of the GatewayId property.</param>
        /// <param name="statusHistoryId">Initial value of the StatusHistoryId property.</param>
        public static GatewayStatusHistoryRef CreateGatewayStatusHistoryRef(global::System.Int32 gatewayStatusHistoryRefId, global::System.Int32 gatewayId, global::System.Int32 statusHistoryId)
        {
            GatewayStatusHistoryRef gatewayStatusHistoryRef = new GatewayStatusHistoryRef();
            gatewayStatusHistoryRef.GatewayStatusHistoryRefId = gatewayStatusHistoryRefId;
            gatewayStatusHistoryRef.GatewayId = gatewayId;
            gatewayStatusHistoryRef.StatusHistoryId = statusHistoryId;
            return gatewayStatusHistoryRef;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GatewayStatusHistoryRefId
        {
            get
            {
                return _GatewayStatusHistoryRefId;
            }
            set
            {
                if (_GatewayStatusHistoryRefId != value)
                {
                    OnGatewayStatusHistoryRefIdChanging(value);
                    ReportPropertyChanging("GatewayStatusHistoryRefId");
                    _GatewayStatusHistoryRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GatewayStatusHistoryRefId");
                    OnGatewayStatusHistoryRefIdChanged();
                }
            }
        }
        private global::System.Int32 _GatewayStatusHistoryRefId;
        partial void OnGatewayStatusHistoryRefIdChanging(global::System.Int32 value);
        partial void OnGatewayStatusHistoryRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GatewayId
        {
            get
            {
                return _GatewayId;
            }
            set
            {
                OnGatewayIdChanging(value);
                ReportPropertyChanging("GatewayId");
                _GatewayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GatewayId");
                OnGatewayIdChanged();
            }
        }
        private global::System.Int32 _GatewayId;
        partial void OnGatewayIdChanging(global::System.Int32 value);
        partial void OnGatewayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryId
        {
            get
            {
                return _StatusHistoryId;
            }
            set
            {
                OnStatusHistoryIdChanging(value);
                ReportPropertyChanging("StatusHistoryId");
                _StatusHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusHistoryId");
                OnStatusHistoryIdChanged();
            }
        }
        private global::System.Int32 _StatusHistoryId;
        partial void OnStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnStatusHistoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_Gateway", "Gateway")]
        public Gateway Gateway
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "Gateway").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "Gateway").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gateway> GatewayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "Gateway");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_Gateway", "Gateway", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory")]
        public StatusHistory StatusHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusHistory> StatusHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "StatusHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="Hub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hub object.
        /// </summary>
        /// <param name="hubId">Initial value of the HubId property.</param>
        /// <param name="gatewayId">Initial value of the GatewayId property.</param>
        /// <param name="lastStatusHistoryID">Initial value of the LastStatusHistoryID property.</param>
        public static Hub CreateHub(global::System.Int32 hubId, global::System.Int32 gatewayId, global::System.Int32 lastStatusHistoryID)
        {
            Hub hub = new Hub();
            hub.HubId = hubId;
            hub.GatewayId = gatewayId;
            hub.LastStatusHistoryID = lastStatusHistoryID;
            return hub;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubId
        {
            get
            {
                return _HubId;
            }
            set
            {
                if (_HubId != value)
                {
                    OnHubIdChanging(value);
                    ReportPropertyChanging("HubId");
                    _HubId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HubId");
                    OnHubIdChanged();
                }
            }
        }
        private global::System.Int32 _HubId;
        partial void OnHubIdChanging(global::System.Int32 value);
        partial void OnHubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubName
        {
            get
            {
                return _HubName;
            }
            set
            {
                OnHubNameChanging(value);
                ReportPropertyChanging("HubName");
                _HubName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubName");
                OnHubNameChanged();
            }
        }
        private global::System.String _HubName;
        partial void OnHubNameChanging(global::System.String value);
        partial void OnHubNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubEndpoint
        {
            get
            {
                return _HubEndpoint;
            }
            set
            {
                OnHubEndpointChanging(value);
                ReportPropertyChanging("HubEndpoint");
                _HubEndpoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubEndpoint");
                OnHubEndpointChanged();
            }
        }
        private global::System.String _HubEndpoint;
        partial void OnHubEndpointChanging(global::System.String value);
        partial void OnHubEndpointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GatewayId
        {
            get
            {
                return _GatewayId;
            }
            set
            {
                OnGatewayIdChanging(value);
                ReportPropertyChanging("GatewayId");
                _GatewayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GatewayId");
                OnGatewayIdChanged();
            }
        }
        private global::System.Int32 _GatewayId;
        partial void OnGatewayIdChanging(global::System.Int32 value);
        partial void OnGatewayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastStatusHistoryID
        {
            get
            {
                return _LastStatusHistoryID;
            }
            set
            {
                OnLastStatusHistoryIDChanging(value);
                ReportPropertyChanging("LastStatusHistoryID");
                _LastStatusHistoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStatusHistoryID");
                OnLastStatusHistoryIDChanged();
            }
        }
        private global::System.Int32 _LastStatusHistoryID;
        partial void OnLastStatusHistoryIDChanging(global::System.Int32 value);
        partial void OnLastStatusHistoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Hubs_Gateways", "Gateway")]
        public Gateway Gateway
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Gateway").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Gateway").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gateway> GatewayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Gateway");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Hubs_Gateways", "Gateway", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_Hub", "HubStatusHistoryRef")]
        public EntityCollection<HubStatusHistoryRef> HubStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "HubStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "HubStatusHistoryRef", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Hub", "Instrumentation")]
        public EntityCollection<Instrumentation> Instrumentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Instrumentation>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Instrumentation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Instrumentation>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Instrumentation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Spokes_Hubs", "HubService")]
        public EntityCollection<HubService> HubServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubService>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "HubService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubService>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "HubService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="HubService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HubService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HubService object.
        /// </summary>
        /// <param name="hubServiceId">Initial value of the HubServiceId property.</param>
        /// <param name="hubId">Initial value of the HubId property.</param>
        /// <param name="lastStatusHistoryID">Initial value of the LastStatusHistoryID property.</param>
        /// <param name="metaServiceId">Initial value of the MetaServiceId property.</param>
        public static HubService CreateHubService(global::System.Int32 hubServiceId, global::System.Int32 hubId, global::System.Int32 lastStatusHistoryID, global::System.Int32 metaServiceId)
        {
            HubService hubService = new HubService();
            hubService.HubServiceId = hubServiceId;
            hubService.HubId = hubId;
            hubService.LastStatusHistoryID = lastStatusHistoryID;
            hubService.MetaServiceId = metaServiceId;
            return hubService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubServiceId
        {
            get
            {
                return _HubServiceId;
            }
            set
            {
                if (_HubServiceId != value)
                {
                    OnHubServiceIdChanging(value);
                    ReportPropertyChanging("HubServiceId");
                    _HubServiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HubServiceId");
                    OnHubServiceIdChanged();
                }
            }
        }
        private global::System.Int32 _HubServiceId;
        partial void OnHubServiceIdChanging(global::System.Int32 value);
        partial void OnHubServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubServiceName
        {
            get
            {
                return _HubServiceName;
            }
            set
            {
                OnHubServiceNameChanging(value);
                ReportPropertyChanging("HubServiceName");
                _HubServiceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubServiceName");
                OnHubServiceNameChanged();
            }
        }
        private global::System.String _HubServiceName;
        partial void OnHubServiceNameChanging(global::System.String value);
        partial void OnHubServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubServiceContract
        {
            get
            {
                return _HubServiceContract;
            }
            set
            {
                OnHubServiceContractChanging(value);
                ReportPropertyChanging("HubServiceContract");
                _HubServiceContract = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubServiceContract");
                OnHubServiceContractChanged();
            }
        }
        private global::System.String _HubServiceContract;
        partial void OnHubServiceContractChanging(global::System.String value);
        partial void OnHubServiceContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubServiceBinding
        {
            get
            {
                return _HubServiceBinding;
            }
            set
            {
                OnHubServiceBindingChanging(value);
                ReportPropertyChanging("HubServiceBinding");
                _HubServiceBinding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubServiceBinding");
                OnHubServiceBindingChanged();
            }
        }
        private global::System.String _HubServiceBinding;
        partial void OnHubServiceBindingChanging(global::System.String value);
        partial void OnHubServiceBindingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubServiceEndpoint
        {
            get
            {
                return _HubServiceEndpoint;
            }
            set
            {
                OnHubServiceEndpointChanging(value);
                ReportPropertyChanging("HubServiceEndpoint");
                _HubServiceEndpoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubServiceEndpoint");
                OnHubServiceEndpointChanged();
            }
        }
        private global::System.String _HubServiceEndpoint;
        partial void OnHubServiceEndpointChanging(global::System.String value);
        partial void OnHubServiceEndpointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HubServiceAssembly
        {
            get
            {
                return _HubServiceAssembly;
            }
            set
            {
                OnHubServiceAssemblyChanging(value);
                ReportPropertyChanging("HubServiceAssembly");
                _HubServiceAssembly = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HubServiceAssembly");
                OnHubServiceAssemblyChanged();
            }
        }
        private global::System.String _HubServiceAssembly;
        partial void OnHubServiceAssemblyChanging(global::System.String value);
        partial void OnHubServiceAssemblyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientClass
        {
            get
            {
                return _ClientClass;
            }
            set
            {
                OnClientClassChanging(value);
                ReportPropertyChanging("ClientClass");
                _ClientClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientClass");
                OnClientClassChanged();
            }
        }
        private global::System.String _ClientClass;
        partial void OnClientClassChanging(global::System.String value);
        partial void OnClientClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubId
        {
            get
            {
                return _HubId;
            }
            set
            {
                OnHubIdChanging(value);
                ReportPropertyChanging("HubId");
                _HubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubId");
                OnHubIdChanged();
            }
        }
        private global::System.Int32 _HubId;
        partial void OnHubIdChanging(global::System.Int32 value);
        partial void OnHubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastStatusHistoryID
        {
            get
            {
                return _LastStatusHistoryID;
            }
            set
            {
                OnLastStatusHistoryIDChanging(value);
                ReportPropertyChanging("LastStatusHistoryID");
                _LastStatusHistoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStatusHistoryID");
                OnLastStatusHistoryIDChanged();
            }
        }
        private global::System.Int32 _LastStatusHistoryID;
        partial void OnLastStatusHistoryIDChanging(global::System.Int32 value);
        partial void OnLastStatusHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaServiceId
        {
            get
            {
                return _MetaServiceId;
            }
            set
            {
                OnMetaServiceIdChanging(value);
                ReportPropertyChanging("MetaServiceId");
                _MetaServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaServiceId");
                OnMetaServiceIdChanged();
            }
        }
        private global::System.Int32 _MetaServiceId;
        partial void OnMetaServiceIdChanging(global::System.Int32 value);
        partial void OnMetaServiceIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Spokes_Hubs", "Hub")]
        public Hub Hub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "Hub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "Hub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hub> HubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "Hub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Spokes_Hubs", "Hub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubService_MetaService", "MetaService")]
        public MetaService MetaService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "MetaService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "MetaService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaService> MetaServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "MetaService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "MetaService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_HubService", "HubServiceStatusHistoryRef")]
        public EntityCollection<HubServiceStatusHistoryRef> HubServiceStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubServiceStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubServiceStatusHistoryRef", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="HubServiceStatusHistoryRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HubServiceStatusHistoryRef : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HubServiceStatusHistoryRef object.
        /// </summary>
        /// <param name="hubServiceStatusHistoryRefId">Initial value of the HubServiceStatusHistoryRefId property.</param>
        /// <param name="hubServiceId">Initial value of the HubServiceId property.</param>
        /// <param name="statusHistoryId">Initial value of the StatusHistoryId property.</param>
        public static HubServiceStatusHistoryRef CreateHubServiceStatusHistoryRef(global::System.Int32 hubServiceStatusHistoryRefId, global::System.Int32 hubServiceId, global::System.Int32 statusHistoryId)
        {
            HubServiceStatusHistoryRef hubServiceStatusHistoryRef = new HubServiceStatusHistoryRef();
            hubServiceStatusHistoryRef.HubServiceStatusHistoryRefId = hubServiceStatusHistoryRefId;
            hubServiceStatusHistoryRef.HubServiceId = hubServiceId;
            hubServiceStatusHistoryRef.StatusHistoryId = statusHistoryId;
            return hubServiceStatusHistoryRef;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubServiceStatusHistoryRefId
        {
            get
            {
                return _HubServiceStatusHistoryRefId;
            }
            set
            {
                if (_HubServiceStatusHistoryRefId != value)
                {
                    OnHubServiceStatusHistoryRefIdChanging(value);
                    ReportPropertyChanging("HubServiceStatusHistoryRefId");
                    _HubServiceStatusHistoryRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HubServiceStatusHistoryRefId");
                    OnHubServiceStatusHistoryRefIdChanged();
                }
            }
        }
        private global::System.Int32 _HubServiceStatusHistoryRefId;
        partial void OnHubServiceStatusHistoryRefIdChanging(global::System.Int32 value);
        partial void OnHubServiceStatusHistoryRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubServiceId
        {
            get
            {
                return _HubServiceId;
            }
            set
            {
                OnHubServiceIdChanging(value);
                ReportPropertyChanging("HubServiceId");
                _HubServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubServiceId");
                OnHubServiceIdChanged();
            }
        }
        private global::System.Int32 _HubServiceId;
        partial void OnHubServiceIdChanging(global::System.Int32 value);
        partial void OnHubServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryId
        {
            get
            {
                return _StatusHistoryId;
            }
            set
            {
                OnStatusHistoryIdChanging(value);
                ReportPropertyChanging("StatusHistoryId");
                _StatusHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusHistoryId");
                OnStatusHistoryIdChanged();
            }
        }
        private global::System.Int32 _StatusHistoryId;
        partial void OnStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnStatusHistoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_HubService", "HubService")]
        public HubService HubService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HubService> HubServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_HubService", "HubService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory")]
        public StatusHistory StatusHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusHistory> StatusHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "StatusHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="HubStatusHistoryRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HubStatusHistoryRef : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HubStatusHistoryRef object.
        /// </summary>
        /// <param name="hubStatusHistoryRefId">Initial value of the HubStatusHistoryRefId property.</param>
        /// <param name="hubId">Initial value of the HubId property.</param>
        /// <param name="statusHistoryId">Initial value of the StatusHistoryId property.</param>
        public static HubStatusHistoryRef CreateHubStatusHistoryRef(global::System.Int32 hubStatusHistoryRefId, global::System.Int32 hubId, global::System.Int32 statusHistoryId)
        {
            HubStatusHistoryRef hubStatusHistoryRef = new HubStatusHistoryRef();
            hubStatusHistoryRef.HubStatusHistoryRefId = hubStatusHistoryRefId;
            hubStatusHistoryRef.HubId = hubId;
            hubStatusHistoryRef.StatusHistoryId = statusHistoryId;
            return hubStatusHistoryRef;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubStatusHistoryRefId
        {
            get
            {
                return _HubStatusHistoryRefId;
            }
            set
            {
                if (_HubStatusHistoryRefId != value)
                {
                    OnHubStatusHistoryRefIdChanging(value);
                    ReportPropertyChanging("HubStatusHistoryRefId");
                    _HubStatusHistoryRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HubStatusHistoryRefId");
                    OnHubStatusHistoryRefIdChanged();
                }
            }
        }
        private global::System.Int32 _HubStatusHistoryRefId;
        partial void OnHubStatusHistoryRefIdChanging(global::System.Int32 value);
        partial void OnHubStatusHistoryRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HubId
        {
            get
            {
                return _HubId;
            }
            set
            {
                OnHubIdChanging(value);
                ReportPropertyChanging("HubId");
                _HubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubId");
                OnHubIdChanged();
            }
        }
        private global::System.Int32 _HubId;
        partial void OnHubIdChanging(global::System.Int32 value);
        partial void OnHubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryId
        {
            get
            {
                return _StatusHistoryId;
            }
            set
            {
                OnStatusHistoryIdChanging(value);
                ReportPropertyChanging("StatusHistoryId");
                _StatusHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusHistoryId");
                OnStatusHistoryIdChanged();
            }
        }
        private global::System.Int32 _StatusHistoryId;
        partial void OnStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnStatusHistoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_Hub", "Hub")]
        public Hub Hub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "Hub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "Hub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hub> HubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "Hub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_Hub", "Hub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_StatusHistory", "StatusHistory")]
        public StatusHistory StatusHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "StatusHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "StatusHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusHistory> StatusHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "StatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "StatusHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="Instrumentation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instrumentation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Instrumentation object.
        /// </summary>
        /// <param name="instrumentationID">Initial value of the InstrumentationID property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventDetail">Initial value of the EventDetail property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Instrumentation CreateInstrumentation(global::System.Int32 instrumentationID, global::System.String eventType, global::System.String eventDetail, global::System.DateTime dateCreated)
        {
            Instrumentation instrumentation = new Instrumentation();
            instrumentation.InstrumentationID = instrumentationID;
            instrumentation.EventType = eventType;
            instrumentation.EventDetail = eventDetail;
            instrumentation.DateCreated = dateCreated;
            return instrumentation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstrumentationID
        {
            get
            {
                return _InstrumentationID;
            }
            set
            {
                if (_InstrumentationID != value)
                {
                    OnInstrumentationIDChanging(value);
                    ReportPropertyChanging("InstrumentationID");
                    _InstrumentationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstrumentationID");
                    OnInstrumentationIDChanged();
                }
            }
        }
        private global::System.Int32 _InstrumentationID;
        partial void OnInstrumentationIDChanging(global::System.Int32 value);
        partial void OnInstrumentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GatewayID
        {
            get
            {
                return _GatewayID;
            }
            set
            {
                OnGatewayIDChanging(value);
                ReportPropertyChanging("GatewayID");
                _GatewayID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GatewayID");
                OnGatewayIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GatewayID;
        partial void OnGatewayIDChanging(Nullable<global::System.Int32> value);
        partial void OnGatewayIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HubID
        {
            get
            {
                return _HubID;
            }
            set
            {
                OnHubIDChanging(value);
                ReportPropertyChanging("HubID");
                _HubID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubID");
                OnHubIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HubID;
        partial void OnHubIDChanging(Nullable<global::System.Int32> value);
        partial void OnHubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HubServiceID
        {
            get
            {
                return _HubServiceID;
            }
            set
            {
                OnHubServiceIDChanging(value);
                ReportPropertyChanging("HubServiceID");
                _HubServiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubServiceID");
                OnHubServiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HubServiceID;
        partial void OnHubServiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnHubServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDetail
        {
            get
            {
                return _EventDetail;
            }
            set
            {
                OnEventDetailChanging(value);
                ReportPropertyChanging("EventDetail");
                _EventDetail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDetail");
                OnEventDetailChanged();
            }
        }
        private global::System.String _EventDetail;
        partial void OnEventDetailChanging(global::System.String value);
        partial void OnEventDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorrelationID
        {
            get
            {
                return _CorrelationID;
            }
            set
            {
                OnCorrelationIDChanging(value);
                ReportPropertyChanging("CorrelationID");
                _CorrelationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CorrelationID");
                OnCorrelationIDChanged();
            }
        }
        private global::System.String _CorrelationID;
        partial void OnCorrelationIDChanging(global::System.String value);
        partial void OnCorrelationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Gateway", "Gateway")]
        public Gateway Gateway
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Gateway").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Gateway").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gateway> GatewayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Gateway");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gateway>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Gateway", "Gateway", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_Instrumentation_Hub", "Hub")]
        public Hub Hub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Hub").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Hub").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hub> HubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Hub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hub>("net.obliteracy.tetsuo.entities.model.FK_Instrumentation_Hub", "Hub", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="MetaService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaService object.
        /// </summary>
        /// <param name="metaServiceId">Initial value of the MetaServiceId property.</param>
        /// <param name="serviceDataContract">Initial value of the ServiceDataContract property.</param>
        /// <param name="serviceWsdl">Initial value of the ServiceWsdl property.</param>
        /// <param name="lastStatusHistoryID">Initial value of the LastStatusHistoryID property.</param>
        public static MetaService CreateMetaService(global::System.Int32 metaServiceId, global::System.String serviceDataContract, global::System.String serviceWsdl, global::System.Int32 lastStatusHistoryID)
        {
            MetaService metaService = new MetaService();
            metaService.MetaServiceId = metaServiceId;
            metaService.ServiceDataContract = serviceDataContract;
            metaService.ServiceWsdl = serviceWsdl;
            metaService.LastStatusHistoryID = lastStatusHistoryID;
            return metaService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaServiceId
        {
            get
            {
                return _MetaServiceId;
            }
            set
            {
                if (_MetaServiceId != value)
                {
                    OnMetaServiceIdChanging(value);
                    ReportPropertyChanging("MetaServiceId");
                    _MetaServiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaServiceId");
                    OnMetaServiceIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaServiceId;
        partial void OnMetaServiceIdChanging(global::System.Int32 value);
        partial void OnMetaServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceDataContract
        {
            get
            {
                return _ServiceDataContract;
            }
            set
            {
                OnServiceDataContractChanging(value);
                ReportPropertyChanging("ServiceDataContract");
                _ServiceDataContract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceDataContract");
                OnServiceDataContractChanged();
            }
        }
        private global::System.String _ServiceDataContract;
        partial void OnServiceDataContractChanging(global::System.String value);
        partial void OnServiceDataContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceWsdl
        {
            get
            {
                return _ServiceWsdl;
            }
            set
            {
                OnServiceWsdlChanging(value);
                ReportPropertyChanging("ServiceWsdl");
                _ServiceWsdl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServiceWsdl");
                OnServiceWsdlChanged();
            }
        }
        private global::System.String _ServiceWsdl;
        partial void OnServiceWsdlChanging(global::System.String value);
        partial void OnServiceWsdlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastStatusHistoryID
        {
            get
            {
                return _LastStatusHistoryID;
            }
            set
            {
                OnLastStatusHistoryIDChanging(value);
                ReportPropertyChanging("LastStatusHistoryID");
                _LastStatusHistoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStatusHistoryID");
                OnLastStatusHistoryIDChanged();
            }
        }
        private global::System.Int32 _LastStatusHistoryID;
        partial void OnLastStatusHistoryIDChanging(global::System.Int32 value);
        partial void OnLastStatusHistoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubService_MetaService", "HubService")]
        public EntityCollection<HubService> HubServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "HubService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubService>("net.obliteracy.tetsuo.entities.model.FK_HubService_MetaService", "HubService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_MetaService", "MetaServiceStatusHistoryRef")]
        public EntityCollection<MetaServiceStatusHistoryRef> MetaServiceStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaServiceStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaServiceStatusHistoryRef", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="MetaServiceStatusHistoryRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaServiceStatusHistoryRef : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaServiceStatusHistoryRef object.
        /// </summary>
        /// <param name="metaServiceStatusHistoryRefId">Initial value of the MetaServiceStatusHistoryRefId property.</param>
        /// <param name="metaServiceId">Initial value of the MetaServiceId property.</param>
        /// <param name="statusHistoryId">Initial value of the StatusHistoryId property.</param>
        public static MetaServiceStatusHistoryRef CreateMetaServiceStatusHistoryRef(global::System.Int32 metaServiceStatusHistoryRefId, global::System.Int32 metaServiceId, global::System.Int32 statusHistoryId)
        {
            MetaServiceStatusHistoryRef metaServiceStatusHistoryRef = new MetaServiceStatusHistoryRef();
            metaServiceStatusHistoryRef.MetaServiceStatusHistoryRefId = metaServiceStatusHistoryRefId;
            metaServiceStatusHistoryRef.MetaServiceId = metaServiceId;
            metaServiceStatusHistoryRef.StatusHistoryId = statusHistoryId;
            return metaServiceStatusHistoryRef;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaServiceStatusHistoryRefId
        {
            get
            {
                return _MetaServiceStatusHistoryRefId;
            }
            set
            {
                if (_MetaServiceStatusHistoryRefId != value)
                {
                    OnMetaServiceStatusHistoryRefIdChanging(value);
                    ReportPropertyChanging("MetaServiceStatusHistoryRefId");
                    _MetaServiceStatusHistoryRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaServiceStatusHistoryRefId");
                    OnMetaServiceStatusHistoryRefIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaServiceStatusHistoryRefId;
        partial void OnMetaServiceStatusHistoryRefIdChanging(global::System.Int32 value);
        partial void OnMetaServiceStatusHistoryRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaServiceId
        {
            get
            {
                return _MetaServiceId;
            }
            set
            {
                OnMetaServiceIdChanging(value);
                ReportPropertyChanging("MetaServiceId");
                _MetaServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaServiceId");
                OnMetaServiceIdChanged();
            }
        }
        private global::System.Int32 _MetaServiceId;
        partial void OnMetaServiceIdChanging(global::System.Int32 value);
        partial void OnMetaServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryId
        {
            get
            {
                return _StatusHistoryId;
            }
            set
            {
                OnStatusHistoryIdChanging(value);
                ReportPropertyChanging("StatusHistoryId");
                _StatusHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusHistoryId");
                OnStatusHistoryIdChanged();
            }
        }
        private global::System.Int32 _StatusHistoryId;
        partial void OnStatusHistoryIdChanging(global::System.Int32 value);
        partial void OnStatusHistoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_MetaService", "MetaService")]
        public MetaService MetaService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaService").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaService").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetaService> MetaServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetaService>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_MetaService", "MetaService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory")]
        public StatusHistory StatusHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusHistory> StatusHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusHistory>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "StatusHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="net.obliteracy.tetsuo.entities.model", Name="StatusHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatusHistory object.
        /// </summary>
        /// <param name="statusHistoryID">Initial value of the StatusHistoryID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="statusCode">Initial value of the StatusCode property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        public static StatusHistory CreateStatusHistory(global::System.Int32 statusHistoryID, global::System.DateTime dateCreated, global::System.String statusCode, global::System.String modifiedBy)
        {
            StatusHistory statusHistory = new StatusHistory();
            statusHistory.StatusHistoryID = statusHistoryID;
            statusHistory.DateCreated = dateCreated;
            statusHistory.StatusCode = statusCode;
            statusHistory.ModifiedBy = modifiedBy;
            return statusHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusHistoryID
        {
            get
            {
                return _StatusHistoryID;
            }
            set
            {
                if (_StatusHistoryID != value)
                {
                    OnStatusHistoryIDChanging(value);
                    ReportPropertyChanging("StatusHistoryID");
                    _StatusHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusHistoryID");
                    OnStatusHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusHistoryID;
        partial void OnStatusHistoryIDChanging(global::System.Int32 value);
        partial void OnStatusHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.String _StatusCode;
        partial void OnStatusCodeChanging(global::System.String value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusDetail
        {
            get
            {
                return _StatusDetail;
            }
            set
            {
                OnStatusDetailChanging(value);
                ReportPropertyChanging("StatusDetail");
                _StatusDetail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusDetail");
                OnStatusDetailChanged();
            }
        }
        private global::System.String _StatusDetail;
        partial void OnStatusDetailChanging(global::System.String value);
        partial void OnStatusDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_GatewayStatusHistoryRef_StatusHistory", "GatewayStatusHistoryRef")]
        public EntityCollection<GatewayStatusHistoryRef> GatewayStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GatewayStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "GatewayStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GatewayStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_GatewayStatusHistoryRef_StatusHistory", "GatewayStatusHistoryRef", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubServiceStatusHistoryRef_StatusHistory", "HubServiceStatusHistoryRef")]
        public EntityCollection<HubServiceStatusHistoryRef> HubServiceStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "HubServiceStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubServiceStatusHistoryRef_StatusHistory", "HubServiceStatusHistoryRef", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_HubStatusHistoryRef_StatusHistory", "HubStatusHistoryRef")]
        public EntityCollection<HubStatusHistoryRef> HubStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HubStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "HubStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HubStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_HubStatusHistoryRef_StatusHistory", "HubStatusHistoryRef", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("net.obliteracy.tetsuo.entities.model", "FK_MetaServiceStatusHistoryRef_StatusHistory", "MetaServiceStatusHistoryRef")]
        public EntityCollection<MetaServiceStatusHistoryRef> MetaServiceStatusHistoryRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetaServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "MetaServiceStatusHistoryRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetaServiceStatusHistoryRef>("net.obliteracy.tetsuo.entities.model.FK_MetaServiceStatusHistoryRef_StatusHistory", "MetaServiceStatusHistoryRef", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
